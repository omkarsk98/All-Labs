if (! ("methods" %in% rownames(installed.packages()))) { install.packages("methods") }
if (! ("statmod" %in% rownames(installed.packages()))) { install.packages("statmod") }
if (! ("methods" %in% rownames(installed.packages()))) { install.packages("methods") }
if (! ("statmod" %in% rownames(installed.packages()))) { install.packages("statmod") }
if (! ("stats" %in% rownames(installed.packages()))) { install.packages("stats") }
pkgs <- c("methods","statmod","stats","graphics","RCurl","jsonlite","tools","utils")
for (pkg in pkgs) {
if (! (pkg %in% rownames(installed.packages()))) { install.packages(pkg) }
}
install.packages("h2o", type="source", repos=(c("http://h2o-release.s3.amazonaws.com/h2o/rel-turing/6/R")))
library(h2o)
localH2O = h2o.init(nthreads=-1)
library(h2o)
demo(h2o.kmeans)
install.packages("h2o", type="source", repos=(c("http://h2o-release.s3.amazonaws.com/h2o/rel-turing/6/R")))
install.packages("h2o", type="source", repos=(c("http://h2o-release.s3.amazonaws.com/h2o/rel-turing/6/R")))
library(h2o)
untar2(tarfile, files, list, exdir, restore_times)
untar(tarfile, files, list, exdir, restore_times)
untar(files, list, exdir, restore_times)
install.packages("h2o",repos=(c("http://s3.amazonaws.com/h2o-release/h2o/master/1497/R",getOption("repos"))))
install.packages("h2o",repos=(c("http://s3.amazonaws.com/h2o-release/h2o/master/1497/R",getOption("repos"))))
setwd("E:/2016/Big Data")
library(MASS)
data(cats)
cats
setwd(" E:\2016\Big Data\")
setwd("E:\2016\Big Data\")
setwd("E:/2016/Big Data/")
options(digits=3)
ls()
load(file="Labs.Rdata")
load(file="cherry.Rdata")
library(MASS)
data(cats)
cats
load(file="cats.Rdata")
load(file="cats")
load(cats)
library(car)
data(Duncan)
str(Duncan)
library(MASS)
data(cats)
cats
data.frame
library(car)
setwd("E:2016/Big Data/")
options(digits=3)
ls()
load(file="Labs.Rdata")
load(file=".Rdata")
ls()
rm(lab2)
ds <- lab1
colnames(ds) <- c("income", "rooms")
a<-rnorm(10, mean=50,sd=5)
b<-runif(10)
save(a,b,file="data1.Rdata")
load(file="data1.Rdata")
ls()
ds<-data1
ds<-load(file="data1.Rdata")
ls(ds)
colnames(ds)<-c("income", "room")
colnames(ds)<-c("a", "b")
ds
colnames(ds)<-c("a", "b")
range(ds$a)
ds<-load(file="data1.Rdata")
ds
ds$a
cherry1 <- read.csv(file.choose(), dec='.', sep=';')
cherry1
plot(as.factor(cherry1$height)
quantile(cherry1$height, seq(from=0, to=1, length=11))
quantile(cherry1$height, seq(from=0, to=1, height=12))
library(MASS)
with(ds, {
hist(income, main="Distribution of Household Income",   freq=FALSE)
lines(density(income), lty=2, lwd=2)
xvals = seq(from=min(income), to=max(income),length=100)
param = fitdistr(income, "lognormal")
lines(xvals, dlnorm(xvals, meanlog=param$estimate[1],
sdlog=param$estimate[2]), col="blue")
} )
library(DAAG)
library(car)
library(MASS)
setwd("E:/2016/Big Data/m00res03/LAB01/")
options(digits=3)
ls()
load(file="Labs.Rdata")
ls()
rm(lab2)
ds <- lab1
colnames(ds) <- c("income", "rooms")
ds
head(ds)#
summary(ds$income)
range(ds$income)
sd(ds$income)
var(ds$income)
plot(density(ds$income))  # left skewed
plot(ds$income)
density(ds$income)
plot(density(ds$income))  # left skewed
summary(ds$rooms)
range(ds$rooms)
sd(ds$rooms)
plot(as.factor(ds$rooms))
(m <- mean(ds$income, trim=0.10) )
m
x <- c(0:10, 50)
x
xm
xm
xm
xm <- mean(x)
xm
c(xm, mean(x, trim=0.10))
(m <- mean(ds$income, trim=0.10) )
ds <- subset(ds, ds$income  >= 10000 & ds$income < 1000000)
summary(ds)
quantile(ds$income, seq(from=0, to=1, length=11))
breaks <- c(0, 23000, 52000, 82000, 250000, 999999)
labels <- c("Poverty", "LowerMid", "UpperMid", "Wealthy", "Rich")
wealth <- cut(ds$income, breaks, labels)
wealth
head(wealth)
head(wealth, n=10)
ds <- cbind(ds, wealth)
head(ds)
wt <- table(wealth)
head(wt)
percent <- wt/sum(wt)*100
wt <- rbind(wt, percent)
wt
plot(wt)    # this kind of sucks
nt <- table(wealth, ds$rooms)
print(nt)
plot(nt)
rm(wealth,breaks,labels)
save(ds, wt, nt, file="Census.Rdata")
library(MASS)
with(ds, {
hist(income, main="Distribution of Household Income",   freq=FALSE)
lines(density(income), lty=2, lwd=2)
xvals = seq(from=min(income), to=max(income),length=100)
param = fitdistr(income, "lognormal")
lines(xvals, dlnorm(xvals, meanlog=param$estimate[1],
sdlog=param$estimate[2]), col="blue")
} )
logincome = log10(ds$income)
hist(logincome, main="Distribution of Household Income", freq=FALSE)
lines(density(logincome), lty=2, lwd=2)  # line type (lty) 2 is dashed
xvals = seq(from=min(logincome), to=max(logincome), length=100)
param = fitdistr(logincome, "normal")
lines(xvals, dnorm(xvals, param$estimate[1],  param$estimate[2]),
lwd=2, col="blue")
with(ds, cor(income, rooms))
with(ds, cor(log(income), rooms) ) # this will give a better correlation
n = length(ds$income)
with(ds, cor(runif(n), rooms))
with(ds,
boxplot(income ~ as.factor(rooms), data=ds, range=0, outline=F, log="y",
xlab="# rooms", ylab="Income")
)
with( ds,
boxplot(rooms ~ wealth, data = ds, main="Room by Wealth", Xlab="Category",
ylab="# rooms")
)
print(wt)
q()
offers = sample(c("noffer", "offer1", "offer2"), size=500, replace=T)
head(offers)
purchasesize = ifelse(offers=="noffer", rlnorm(500, meanlog=log(25)), ifelse(offers=="offer1", rlnorm(500, meanlog=log(50)), rlnorm(500, meanlog=log(55))))
head(purchasesize)
offertest = data.frame(offer=offers, purchase_amt=purchasesize)
summary(offertest)
model = lm(log10(purchase_amt) ~ as.factor(offers), data=offertest)
summary(model)
with(ds, {
hist(income, main="Distribution of Household Income",   freq=FALSE)
lines(density(income), lty=2, lwd=2)
xvals = seq(from=min(income), to=max(income),length=100)
param = fitdistr(income, "lognormal")
lines(xvals, dlnorm(xvals, meanlog=param$estimate[1],
sdlog=param$estimate[2]), col="blue")
} )
